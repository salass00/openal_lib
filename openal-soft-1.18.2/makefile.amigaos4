HOST   = ppc-amigaos
CC     = $(HOST)-gcc
AR     = $(HOST)-ar
RANLIB = $(HOST)-ranlib
STRIP  = $(HOST)-strip

AMIGADATE = $(shell date +"%-d.%-m.%Y")

OPTIMIZE = -O2
DEBUG    = -g
WARNINGS = -Wall -Wwrite-strings -Werror
DEFINES  = -DAL_ALEXT_PROTOTYPES -D__AMIGADATE__=\"$(AMIGADATE)\"
INCPATHS = -I. -I./include -I./OpenAL32/Include -I./Alc -I./common

CFLAGS   = -std=gnu11 $(OPTIMIZE) $(DEBUG) $(WARNINGS) $(INCPATHS) $(DEFINES)
PICFLAGS = -fPIC -DPIC

STATIC_LIB := libopenal.a
SHARED_LIB := libopenal.so

SRCS = Alc/ALc.c \
       Alc/alcConfig.c \
       Alc/alcRing.c \
       Alc/ALu.c \
       Alc/ambdec.c \
       Alc/bformatdec.c \
       Alc/bs2b.c \
       Alc/bsinc.c \
       Alc/converter.c \
       Alc/helpers.c \
       Alc/hrtf.c \
       Alc/mastering.c \
       Alc/mixer.c \
       Alc/mixer_c.c \
       Alc/nfcfilter.c \
       Alc/panning.c \
       Alc/uhjfilter.c \
       Alc/backends/ahi.c \
       Alc/backends/base.c \
       Alc/backends/loopback.c \
       Alc/backends/null.c \
       Alc/backends/wave.c \
       Alc/effects/chorus.c \
       Alc/effects/compressor.c \
       Alc/effects/dedicated.c \
       Alc/effects/distortion.c \
       Alc/effects/echo.c \
       Alc/effects/equalizer.c \
       Alc/effects/flanger.c \
       Alc/effects/modulator.c \
       Alc/effects/null.c \
       Alc/effects/reverb.c \
       common/almalloc.c \
       common/atomic.c \
       common/rwlock.c \
       common/threads.c \
       common/uintmap.c \
       OpenAL32/alAuxEffectSlot.c \
       OpenAL32/alBuffer.c \
       OpenAL32/alEffect.c \
       OpenAL32/alError.c \
       OpenAL32/alExtension.c \
       OpenAL32/alFilter.c \
       OpenAL32/alListener.c \
       OpenAL32/alSource.c \
       OpenAL32/alSource.c \
       OpenAL32/alState.c \
       OpenAL32/alThunk.c \
       OpenAL32/sample_cvt.c

OBJS = $(addprefix obj/,$(SRCS:.c=.o))

SO_OBJS = $(addprefix so-obj/,$(SRCS:.c=.o))

.PHONY: all
all: $(STATIC_LIB) $(SHARED_LIB) examples

obj/Alc/%.o: Alc/%.c
	@mkdir -p obj/Alc
	$(CC) $(CFLAGS) -c -o $@ $<

obj/Alc/backends/%.o: Alc/backends/%.c
	@mkdir -p obj/Alc/backends
	$(CC) $(CFLAGS) -c -o $@ $<

obj/Alc/effects/%.o: Alc/effects/%.c
	@mkdir -p obj/Alc/effects
	$(CC) $(CFLAGS) -c -o $@ $<

obj/common/%.o: common/%.c
	@mkdir -p obj/common
	$(CC) $(CFLAGS) -c -o $@ $<

obj/OpenAL32/%.o: OpenAL32/%.c
	@mkdir -p obj/OpenAL32
	$(CC) $(CFLAGS) -c -o $@ $<

$(STATIC_LIB): $(OBJS)
	$(AR) -crv $@ $^
	$(RANLIB) $@

so-obj/Alc/%.o: Alc/%.c
	@mkdir -p so-obj/Alc
	$(CC) $(CFLAGS) $(PICFLAGS) -c -o $@ $<

so-obj/Alc/backends/%.o: Alc/backends/%.c
	@mkdir -p so-obj/Alc/backends
	$(CC) $(CFLAGS) $(PICFLAGS) -c -o $@ $<

so-obj/Alc/effects/%.o: Alc/effects/%.c
	@mkdir -p so-obj/Alc/effects
	$(CC) $(CFLAGS) $(PICFLAGS) -c -o $@ $<

so-obj/common/%.o: common/%.c
	@mkdir -p so-obj/common
	$(CC) $(CFLAGS) $(PICFLAGS) -c -o $@ $<

so-obj/OpenAL32/%.o: OpenAL32/%.c
	@mkdir -p so-obj/OpenAL32
	$(CC) $(CFLAGS) $(PICFLAGS) -c -o $@ $<

$(SHARED_LIB): $(SO_OBJS)
	$(CC) -shared -Wl,--soname=$@ -o $@.debug $^ -lpthread
	$(STRIP) -R.comment -o $@ $@.debug

.PHONY: examples
examples:
	$(MAKE) -C examples -f makefile.amigaos4

.PHONY: clean
clean:
	$(MAKE) -C examples -f makefile.amigaos4 clean
	rm -rf $(STATIC_LIB) $(SHARED_LIB) obj so-obj

.PHONY: install
install:
	cp -r include/* /SDK/local/newlib/include/
	cp libopenal.a /SDK/local/newlib/lib/
	cp libopenal.so /SDK/local/newlib/lib/
